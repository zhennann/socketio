{"version":3,"sources":["webpack://socketio/webpack/universalModuleDefinition","webpack://socketio/webpack/bootstrap","webpack://socketio/./src/main.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","adapter","io","_socket","_subscribeCounter","_subscribesAll","_subscribesPath","_subscribesWaitingTimeoutId","_subscribesWaitingDoing","_subscribesWaiting","_unsubscribesWaitingTimeoutId","_unsubscribesWaitingDoing","_unsubscribesWaiting","subscribe","path","cbMessage","cbSubscribed","options","this","_getSocket","connected","connect","subscribeId","_itemPath","_newPathSubscribe","scene","items","_doSubscribesWaiting","unsubscribe","_item","keys","length","socketId","_doUnsubscribesWaiting","disconnect","subscribes","push","id","then","_subscribe","catch","setTimeout","socket","on","_onConnect","_onDisconnect","_onMessage","data","message","reason","reset","initialize"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAkB,SAAID,IAEtBD,EAAe,SAAIC,IARrB,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,+BClFrD,OAAe,mBAAAC,GACb,IAAMC,EAAK,CAETC,QAAS,KAETC,kBAAmB,EACnBC,eAAgB,GAChBC,gBAAiB,GAEjBC,4BAA6B,EAC7BC,yBAAyB,EACzBC,mBAAoB,GAEpBC,8BAA+B,EAC/BC,2BAA2B,EAC3BC,qBAAsB,GAEtBC,UAhBS,SAgBCC,EAAMC,EAAWC,EAAcC,GAEvCA,EAAUA,GAAW,GAErB,IAAMd,EAAUe,KAAKC,aAChBhB,EAAQiB,WACXjB,EAAQkB,UAGV,IAAMC,IAAgBJ,KAAKd,kBAC3Bc,KAAKb,eAAeiB,GAAe,CACjCR,OAAMC,YAAWC,eAAcC,WAGjC,IAAIM,EAAYL,KAAKZ,gBAAgBQ,GACjCU,GAAoB,EAyBxB,OAxBKD,IACHA,EAAYL,KAAKZ,gBAAgBQ,GAAQ,CAAEW,MAAOR,EAAQQ,MAAOC,MAAO,IACxEF,GAAoB,SAEbN,KAAKN,qBAAqBE,IAEnCS,EAAUG,MAAMJ,IAAe,EAG3BnB,EAAQiB,YACNI,GACFN,KAAKT,mBAAmBK,IAAQ,EAChCI,KAAKS,wBAEAT,KAAKT,mBAAmBK,IAEvBE,GACFA,KAODM,GAETM,YA1DS,SA0DGN,GACV,IAAMO,EAAQX,KAAKb,eAAeiB,GAClC,GAAKO,EAAL,CAEA,IAAMN,EAAYL,KAAKZ,gBAAgBuB,EAAMf,MAkB7C,GAjBIS,WACKA,EAAUG,MAAMJ,GACqB,IAAxC3C,OAAOmD,KAAKP,EAAUG,OAAOK,gBAExBb,KAAKZ,gBAAgBuB,EAAMf,aAE3BI,KAAKT,mBAAmBoB,EAAMf,MAEjCS,EAAUS,WACZd,KAAKN,qBAAqBiB,EAAMf,MAAQ,CAAEW,MAAOF,EAAUE,MAAOO,SAAUT,EAAUS,UACtFd,KAAKe,mCAKJf,KAAKb,eAAeiB,GAEqB,IAA5C3C,OAAOmD,KAAKZ,KAAKb,gBAAgB0B,OACnBb,KAAKC,aACbe,eAGZP,qBArFS,WAqFc,WACrB,IAAIT,KAAKV,yBACgC,IAArCU,KAAKX,6BAC2C,IAAhD5B,OAAOmD,KAAKZ,KAAKT,oBAAoBsB,QACpCb,KAAKf,QAAQiB,UAAlB,CAEA,IAAMe,EAAa,GACnB,IAAK,IAAMrB,KAAQI,KAAKT,mBAAoB,CAC1C,IAAMc,EAAYL,KAAKZ,gBAAgBQ,GACnCS,GACFY,EAAWC,KAAK,CAAEtB,OAAMW,MAAOF,EAAUE,QAI7CP,KAAKV,yBAA0B,EAC/BP,EAAQY,UAAU,CAAEsB,aAAYH,SAAUd,KAAKf,QAAQkC,KACpDC,MAAK,WAAM,2BAEV,YAAoBH,EAApB,+CAAgC,KAArBN,EAAqB,eAEvB,EAAKpB,mBAAmBoB,EAAMf,MAErC,IAAMS,EAAY,EAAKjB,gBAAgBuB,EAAMf,MAC7C,GAAIS,EAEF,IAAK,IAAMD,KADXC,EAAUS,SAAW,EAAK7B,QAAQkC,GACRd,EAAUG,MAAO,CACzC,IAAMa,EAAa,EAAKlC,eAAeiB,GACnCiB,GAAcA,EAAWvB,cAC3BuB,EAAWvB,iBAZT,6EAkBV,EAAKR,yBAA0B,EAE/B,EAAKmB,0BAENa,OAAM,WAEL,EAAKhC,yBAA0B,EAE/B,EAAKD,4BAA8B1C,OAAO4E,YAAW,WACnD,EAAKlC,4BAA8B,EACnC,EAAKoB,yBACJ,UAGTM,uBArIS,WAqIgB,WACvB,IAAIf,KAAKP,2BACkC,IAAvCO,KAAKR,+BAC6C,IAAlD/B,OAAOmD,KAAKZ,KAAKN,sBAAsBmB,OAA3C,CAEA,IAAMI,EAAa,GACnB,IAAK,IAAMrB,KAAQI,KAAKN,qBAAsB,CAE5C,GADkBM,KAAKZ,gBAAgBQ,UAG9BI,KAAKN,qBAAqBE,OAC5B,CACL,IAAMe,EAAQX,KAAKN,qBAAqBE,GACxCqB,EAAWC,KAAK,CAAEtB,OAAMW,MAAOI,EAAMJ,MAAOO,SAAUH,EAAMG,YAIhEd,KAAKP,2BAA4B,EACjCV,EAAQ2B,YAAY,CAAEO,eACnBG,MAAK,WAAM,2BAEV,YAAoBH,EAApB,+CAAgC,KAArBN,EAAqB,eAEvB,EAAKjB,qBAAqBiB,EAAMf,OAJ/B,6EAOV,EAAKH,2BAA4B,EAEjC,EAAKsB,4BAENO,OAAM,WAEL,EAAK7B,2BAA4B,EAEjC,EAAKD,8BAAgC7C,OAAO4E,YAAW,WACrD,EAAK/B,8BAAgC,EACrC,EAAKuB,2BACJ,UAGTd,WA7KS,WAoLP,OANKD,KAAKf,UACRe,KAAKf,QAAUF,EAAQyC,SACvBxB,KAAKf,QAAQwC,GAAG,UAAWzB,KAAK0B,WAAWnD,KAAKyB,OAChDA,KAAKf,QAAQwC,GAAG,aAAczB,KAAK2B,cAAcpD,KAAKyB,OACtDA,KAAKf,QAAQwC,GAAG,UAAWzB,KAAK4B,WAAWrD,KAAKyB,QAE3CA,KAAKf,SAEd2C,WAtLS,SAsLEC,GACT,IAAMxB,EAAYL,KAAKZ,gBAAgByC,EAAKjC,MAC5C,GAAKS,EACL,IAAK,IAAMD,KAAeC,EAAUG,MAAO,CACzC,IAAMa,EAAarB,KAAKb,eAAeiB,GACnCiB,GAAcA,EAAWxB,WAC3BwB,EAAWxB,UAAU,CAAEiC,QAASD,EAAKC,YAI3CJ,WAhMS,WAkMP,GADA1B,KAAKT,mBAAqB,GACuB,IAA7C9B,OAAOmD,KAAKZ,KAAKZ,iBAAiByB,OACpCb,KAAKf,QAAQ+B,iBACR,CAEL,IAAK,IAAMpB,KAAQI,KAAKZ,gBACtBY,KAAKT,mBAAmBK,IAAQ,EAElCI,KAAKS,yBAGTkB,cA5MS,SA4MKI,GACZ/B,KAAKT,mBAAqB,GAEX,yBAAXwC,GAEF/B,KAAKf,QAAQkB,WAGjB6B,MApNS,WAqNPhC,KAAKN,qBAAuB,GAC5BM,KAAKT,mBAAqB,GAC1BS,KAAKb,eAAiB,GACtBa,KAAKZ,gBAAkB,GACnBY,KAAKf,SACPe,KAAKf,QAAQ+B,eAKnB,OADAjC,EAAQkD,WAAWjD,GACZA","file":"socketio.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"socketio\"] = factory();\n\telse\n\t\troot[\"socketio\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default adapter => {\n  const io = {\n    // socket\n    _socket: null,\n    // subscribes\n    _subscribeCounter: 0,\n    _subscribesAll: {},\n    _subscribesPath: {},\n    // subscribes waiting\n    _subscribesWaitingTimeoutId: 0,\n    _subscribesWaitingDoing: false,\n    _subscribesWaiting: {},\n    // unsubscribes waiting\n    _unsubscribesWaitingTimeoutId: 0,\n    _unsubscribesWaitingDoing: false,\n    _unsubscribesWaiting: {},\n    // methods\n    subscribe(path, cbMessage, cbSubscribed, options) {\n    // options\n      options = options || {};\n      // socket\n      const _socket = this._getSocket();\n      if (!_socket.connected) {\n        _socket.connect();\n      }\n      // record to All\n      const subscribeId = ++this._subscribeCounter;\n      this._subscribesAll[subscribeId] = {\n        path, cbMessage, cbSubscribed, options,\n      };\n      // record to path\n      let _itemPath = this._subscribesPath[path];\n      let _newPathSubscribe = false;\n      if (!_itemPath) {\n        _itemPath = this._subscribesPath[path] = { scene: options.scene, items: {} };\n        _newPathSubscribe = true;\n        // delete waiting\n        delete this._unsubscribesWaiting[path];\n      }\n      _itemPath.items[subscribeId] = true;\n\n      // check waitings\n      if (_socket.connected) {\n        if (_newPathSubscribe) {\n          this._subscribesWaiting[path] = true;\n          this._doSubscribesWaiting();\n        } else {\n          if (!this._subscribesWaiting[path]) {\n          // invoke cbSubscribed directly\n            if (cbSubscribed) {\n              cbSubscribed();\n            }\n          }\n        }\n      }\n\n      // ok\n      return subscribeId;\n    },\n    unsubscribe(subscribeId) {\n      const _item = this._subscribesAll[subscribeId];\n      if (!_item) return;\n\n      const _itemPath = this._subscribesPath[_item.path];\n      if (_itemPath) {\n        delete _itemPath.items[subscribeId];\n        if (Object.keys(_itemPath.items).length === 0) {\n        // delete path\n          delete this._subscribesPath[_item.path];\n          // delete waiting\n          delete this._subscribesWaiting[_item.path];\n          // unsubscribe\n          if (_itemPath.socketId) {\n            this._unsubscribesWaiting[_item.path] = { scene: _itemPath.scene, socketId: _itemPath.socketId };\n            this._doUnsubscribesWaiting();\n          }\n        }\n      }\n\n      delete this._subscribesAll[subscribeId];\n\n      if (Object.keys(this._subscribesAll).length === 0) {\n        const _socket = this._getSocket();\n        _socket.disconnect();\n      }\n    },\n    _doSubscribesWaiting() {\n      if (this._subscribesWaitingDoing) return;\n      if (this._subscribesWaitingTimeoutId !== 0) return;\n      if (Object.keys(this._subscribesWaiting).length === 0) return;\n      if (!this._socket.connected) return;\n      // combine\n      const subscribes = [];\n      for (const path in this._subscribesWaiting) {\n        const _itemPath = this._subscribesPath[path];\n        if (_itemPath) {\n          subscribes.push({ path, scene: _itemPath.scene });\n        }\n      }\n      // subscribe\n      this._subscribesWaitingDoing = true;\n      adapter.subscribe({ subscribes, socketId: this._socket.id })\n        .then(() => {\n        // loop\n          for (const _item of subscribes) {\n          // delete waiting\n            delete this._subscribesWaiting[_item.path];\n            // cbSubscribed\n            const _itemPath = this._subscribesPath[_item.path];\n            if (_itemPath) {\n              _itemPath.socketId = this._socket.id;\n              for (const subscribeId in _itemPath.items) {\n                const _subscribe = this._subscribesAll[subscribeId];\n                if (_subscribe && _subscribe.cbSubscribed) {\n                  _subscribe.cbSubscribed();\n                }\n              }\n            }\n          }\n          // done\n          this._subscribesWaitingDoing = false;\n          // next\n          this._doSubscribesWaiting();\n        })\n        .catch(() => {\n        // done\n          this._subscribesWaitingDoing = false;\n          // timeout\n          this._subscribesWaitingTimeoutId = window.setTimeout(() => {\n            this._subscribesWaitingTimeoutId = 0;\n            this._doSubscribesWaiting();\n          }, 2000);\n        });\n    },\n    _doUnsubscribesWaiting() {\n      if (this._unsubscribesWaitingDoing) return;\n      if (this._unsubscribesWaitingTimeoutId !== 0) return;\n      if (Object.keys(this._unsubscribesWaiting).length === 0) return;\n      // combine\n      const subscribes = [];\n      for (const path in this._unsubscribesWaiting) {\n        const _itemPath = this._subscribesPath[path];\n        if (_itemPath) {\n        // delete waiting\n          delete this._unsubscribesWaiting[path];\n        } else {\n          const _item = this._unsubscribesWaiting[path];\n          subscribes.push({ path, scene: _item.scene, socketId: _item.socketId });\n        }\n      }\n      // unsubscribe\n      this._unsubscribesWaitingDoing = true;\n      adapter.unsubscribe({ subscribes })\n        .then(() => {\n        // loop\n          for (const _item of subscribes) {\n          // delete waiting\n            delete this._unsubscribesWaiting[_item.path];\n          }\n          // done\n          this._unsubscribesWaitingDoing = false;\n          // next\n          this._doUnsubscribesWaiting();\n        })\n        .catch(() => {\n        // done\n          this._unsubscribesWaitingDoing = false;\n          // timeout\n          this._unsubscribesWaitingTimeoutId = window.setTimeout(() => {\n            this._unsubscribesWaitingTimeoutId = 0;\n            this._doUnsubscribesWaiting();\n          }, 2000);\n        });\n    },\n    _getSocket() {\n      if (!this._socket) {\n        this._socket = adapter.socket();\n        this._socket.on('connect', this._onConnect.bind(this));\n        this._socket.on('disconnect', this._onDisconnect.bind(this));\n        this._socket.on('message', this._onMessage.bind(this));\n      }\n      return this._socket;\n    },\n    _onMessage(data) {\n      const _itemPath = this._subscribesPath[data.path];\n      if (!_itemPath) return;\n      for (const subscribeId in _itemPath.items) {\n        const _subscribe = this._subscribesAll[subscribeId];\n        if (_subscribe && _subscribe.cbMessage) {\n          _subscribe.cbMessage({ message: data.message });\n        }\n      }\n    },\n    _onConnect() {\n      this._subscribesWaiting = {};\n      if (Object.keys(this._subscribesPath).length === 0) {\n        this._socket.disconnect();\n      } else {\n      // -> waitings\n        for (const path in this._subscribesPath) {\n          this._subscribesWaiting[path] = true;\n        }\n        this._doSubscribesWaiting();\n      }\n    },\n    _onDisconnect(reason) {\n      this._subscribesWaiting = {};\n      // reconnect\n      if (reason === 'io server disconnect') {\n      // the disconnection was initiated by the server, you need to reconnect manually\n        this._socket.connect();\n      }\n    },\n    reset() {\n      this._unsubscribesWaiting = {};\n      this._subscribesWaiting = {};\n      this._subscribesAll = {};\n      this._subscribesPath = {};\n      if (this._socket) {\n        this._socket.disconnect();\n      }\n    },\n  };\n  adapter.initialize(io);\n  return io;\n};\n"],"sourceRoot":""}